<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.lottery.mapper.TransactionRecordMapper">
    
    <resultMap type="TransactionRecord" id="TransactionRecordResult">
        <result property="id"    column="id"    />
        <result property="userName"    column="user_name"    />
        <result property="trxId"    column="trx_id"    />
        <result property="amount"    column="amount"    />
        <result property="beforeAmount"    column="before_amount"    />
        <result property="afterAmount"    column="after_amount"    />
        <result property="payType"    column="pay_type"    />
        <result property="businessType"    column="business_type"    />
        <result property="businessOrder"    column="business_order"    />
        <result property="createTime"    column="create_time"    />
        <result property="remark"    column="remark"    />
        <result property="operName"    column="oper_name"    />
    </resultMap>

    <sql id="selectTransactionRecordVo">
        select id, user_name, trx_id, amount, before_amount, after_amount, pay_type, business_type, business_order, create_time, remark, oper_name from t_transaction_record
    </sql>

    <select id="selectTransactionRecordList" parameterType="TransactionRecord" resultMap="TransactionRecordResult">
        <include refid="selectTransactionRecordVo"/>
        <where>  
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="trxId != null  and trxId != ''"> and trx_id = #{trxId}</if>
            <if test="amount != null "> and amount = #{amount}</if>
            <if test="beforeAmount != null "> and before_amount = #{beforeAmount}</if>
            <if test="afterAmount != null "> and after_amount = #{afterAmount}</if>
            <if test="payType != null "> and pay_type = #{payType}</if>
            <if test="businessType != null "> and business_type = #{businessType}</if>
            <if test="businessOrder != null  and businessOrder != ''"> and business_order = #{businessOrder}</if>
            <if test="operName != null  and operName != ''"> and oper_name like concat('%', #{operName}, '%')</if>
        </where>
    </select>
    
    <select id="selectTransactionRecordById" parameterType="Long" resultMap="TransactionRecordResult">
        <include refid="selectTransactionRecordVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTransactionRecord" parameterType="TransactionRecord" useGeneratedKeys="true" keyProperty="id">
        insert into t_transaction_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="trxId != null">trx_id,</if>
            <if test="amount != null">amount,</if>
            <if test="beforeAmount != null">before_amount,</if>
            <if test="afterAmount != null">after_amount,</if>
            <if test="payType != null">pay_type,</if>
            <if test="businessType != null">business_type,</if>
            <if test="businessOrder != null">business_order,</if>
            <if test="createTime != null">create_time,</if>
            <if test="remark != null">remark,</if>
            <if test="operName != null">oper_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="trxId != null">#{trxId},</if>
            <if test="amount != null">#{amount},</if>
            <if test="beforeAmount != null">#{beforeAmount},</if>
            <if test="afterAmount != null">#{afterAmount},</if>
            <if test="payType != null">#{payType},</if>
            <if test="businessType != null">#{businessType},</if>
            <if test="businessOrder != null">#{businessOrder},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="operName != null">#{operName},</if>
         </trim>
    </insert>

    <update id="updateTransactionRecord" parameterType="TransactionRecord">
        update t_transaction_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="trxId != null">trx_id = #{trxId},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="beforeAmount != null">before_amount = #{beforeAmount},</if>
            <if test="afterAmount != null">after_amount = #{afterAmount},</if>
            <if test="payType != null">pay_type = #{payType},</if>
            <if test="businessType != null">business_type = #{businessType},</if>
            <if test="businessOrder != null">business_order = #{businessOrder},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="operName != null">oper_name = #{operName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTransactionRecordById" parameterType="Long">
        delete from t_transaction_record where id = #{id}
    </delete>

    <delete id="deleteTransactionRecordByIds" parameterType="String">
        delete from t_transaction_record where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>